name: Docker (Github Packages)

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ros-dev
  NVIDIA_IMAGE_NAME: ros-dev-nvidia

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
# No need for tests right now
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: free disk space
#         run: |
#           sudo swapoff -a
#           sudo rm -f /swapfile
#           sudo apt clean
#           docker rmi $(docker image ls -aq)
#           df -h
        
#       - name: Run tests
#         run: |
#           if [ -f docker-compose.test.yml ]; then
#             docker-compose --file docker-compose.test.yml build
#             docker-compose --file docker-compose.test.yml run sut
#           else
#             ./build.sh
#           fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
          
      - name: Build images
        run: ./build.sh

      - name: Log into registry
        run: echo "${{ secrets.GPR_UPLOAD_PACKAGE_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push images
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          NVIDIA_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$NVIDIA_IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          NVIDIA_IMAGE_ID=$(echo $NVIDIA_IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=kinetic-$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=kinetic-latest

          echo IMAGE_ID=$IMAGE_ID
          echo NVIDIA_IMAGE_ID=$NVIDIA_IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $NVIDIA_IMAGE_NAME $NVIDIA_IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker push $NVIDIA_IMAGE_ID:$VERSION

      - name: Print remaining disk space
        run: df -h
